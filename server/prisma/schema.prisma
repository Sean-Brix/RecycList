// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("user")
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship with user preferences
  preferences UserPreferences?

  @@map("accounts")
}

model UserPreferences {
  id               Int     @id @default(autoincrement())
  accountId        Int     @unique
  
  // Theme and appearance
  theme            String  @default("light") // light, dark
  
  // System settings
  binFullAlert     Boolean @default(true)
  recordsPerPage   Int     @default(10)
  uiSize           String  @default("medium") // small, medium, large
  
  // Notification settings
  notifications    Boolean @default(true)
  autoRefresh      Boolean @default(true)
  compactMode      Boolean @default(false)
  
  // Language and locale
  language         String  @default("en")
  timezone         String  @default("UTC")
  dateFormat       String  @default("MM/DD/YYYY")
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relationship with account
  account          Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@map("user_preferences")
}


model waste_items {
  id               Int      @id @default(autoincrement())
  recyclable       Int      @default(0)
  biodegradable    Int      @default(0) 
  nonBiodegradable Int      @default(0)
  date             DateTime @unique @db.Date
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("waste_items")
}

model Bin {
  id        Int      @id @default(autoincrement())
  fullAt    DateTime @default(now())
  createdAt DateTime @default(now())

  @@map("bin_records")
}
